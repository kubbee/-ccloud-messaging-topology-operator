apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: ccloud-messaging-topology-operator-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: kafkaacls.messages.kubbee.tech
spec:
  group: messages.kubbee.tech
  names:
    kind: KafkaACL
    listKind: KafkaACLList
    plural: kafkaacls
    singular: kafkaacl
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KafkaACL is the Schema for the kafkaacls API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KafkaACLSpec defines the desired state of KafkaACL
            properties:
              operation:
                type: string
              permission:
                type: string
              serviceAccount:
                description: KafkaRBACServiceAccount serviceaccount name to give permission
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
              topic:
                type: string
            required:
            - operation
            - permission
            - serviceAccount
            - topic
            type: object
          status:
            description: KafkaACLStatus defines the observed state of KafkaACL
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: The last time this Condition status changed.
                      format: date-time
                      type: string
                    message:
                      description: Full text reason for current status of the condition.
                      type: string
                    reason:
                      description: One word, camel-case reason for current status of the condition.
                      type: string
                    status:
                      description: True, False, or Unknown
                      type: string
                    type:
                      description: Type indicates the scope of the custom resource status addressed by the condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run "make" to regenerate code after modifying this file'
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: kafkaconsumers.messages.kubbee.tech
spec:
  group: messages.kubbee.tech
  names:
    kind: KafkaConsumer
    listKind: KafkaConsumerList
    plural: kafkaconsumers
    singular: kafkaconsumer
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KafkaConsumer is the Schema for the kafkaconsumers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KafkaConsumerSpec defines the desired state of KafkaConsumer
            properties:
              domain:
                type: string
              kafkaClusterResource:
                properties:
                  namespace:
                    type: string
                type: object
              kafkaReferenceResource:
                properties:
                  name:
                    type: string
                type: object
              topic:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "make" to regenerate code after modifying this file'
                type: string
            required:
            - domain
            - kafkaClusterResource
            - kafkaReferenceResource
            - topic
            type: object
          status:
            description: KafkaConsumerStatus defines the observed state of KafkaConsumer
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: The last time this Condition status changed.
                      format: date-time
                      type: string
                    message:
                      description: Full text reason for current status of the condition.
                      type: string
                    reason:
                      description: One word, camel-case reason for current status of the condition.
                      type: string
                    status:
                      description: True, False, or Unknown
                      type: string
                    type:
                      description: Type indicates the scope of the custom resource status addressed by the condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run "make" to regenerate code after modifying this file'
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: kafkaproducers.messages.kubbee.tech
spec:
  group: messages.kubbee.tech
  names:
    kind: KafkaProducer
    listKind: KafkaProducerList
    plural: kafkaproducers
    singular: kafkaproducer
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KafkaProducer is the Schema for the kafkaproducers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KafkaProducerSpec defines the desired state of KafkaProducer
            properties:
              kafkaClusterResource:
                properties:
                  namespace:
                    type: string
                type: object
              kafkaReferenceResource:
                properties:
                  name:
                    type: string
                type: object
              partitions:
                format: int32
                type: integer
              topic:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "make" to regenerate code after modifying this file'
                type: string
            required:
            - kafkaClusterResource
            - kafkaReferenceResource
            - topic
            type: object
          status:
            description: KafkaProducerStatus defines the observed state of KafkaProducer
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: The last time this Condition status changed.
                      format: date-time
                      type: string
                    message:
                      description: Full text reason for current status of the condition.
                      type: string
                    reason:
                      description: One word, camel-case reason for current status of the condition.
                      type: string
                    status:
                      description: True, False, or Unknown
                      type: string
                    type:
                      description: Type indicates the scope of the custom resource status addressed by the condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run "make" to regenerate code after modifying this file'
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: kafkarbacs.messages.kubbee.tech
spec:
  group: messages.kubbee.tech
  names:
    kind: KafkaRBAC
    listKind: KafkaRBACList
    plural: kafkarbacs
    singular: kafkarbac
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KafkaRBAC is the Schema for the kafkarbacs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KafkaRBACSpec defines the desired state of KafkaRBAC
            properties:
              foo:
                description: Foo is an example field of KafkaRBAC. Edit kafkarbac_types.go to remove/update
                type: string
            type: object
          status:
            description: KafkaRBACStatus defines the observed state of KafkaRBAC
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: kafkareferences.messages.kubbee.tech
spec:
  group: messages.kubbee.tech
  names:
    kind: KafkaReference
    listKind: KafkaReferenceList
    plural: kafkareferences
    singular: kafkareference
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KafkaReference is the Schema for the kafkareferences API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KafkaReferenceSpec defines the desired state of KafkaReference
            properties:
              clusterName:
                type: string
              environment:
                type: string
              kafkaClusterResource:
                properties:
                  namespace:
                    type: string
                type: object
              tenant:
                type: string
            required:
            - clusterName
            - environment
            - kafkaClusterResource
            type: object
          status:
            description: KafkaReferenceStatus defines the observed state of KafkaReference
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: The last time this Condition status changed.
                      format: date-time
                      type: string
                    message:
                      description: Full text reason for current status of the condition.
                      type: string
                    reason:
                      description: One word, camel-case reason for current status of the condition.
                      type: string
                    status:
                      description: True, False, or Unknown
                      type: string
                    type:
                      description: Type indicates the scope of the custom resource status addressed by the condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run "make" to regenerate code after modifying this file'
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: kafkaserviceaccounts.messages.kubbee.tech
spec:
  group: messages.kubbee.tech
  names:
    kind: KafkaServiceAccount
    listKind: KafkaServiceAccountList
    plural: kafkaserviceaccounts
    singular: kafkaserviceaccount
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KafkaServiceAccount is the Schema for the kafkaserviceaccounts API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KafkaServiceAccountSpec defines the desired state of KafkaServiceAccount
            properties:
              description:
                type: string
              serviceAccount:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "make" to regenerate code after modifying this file'
                type: string
            required:
            - description
            - serviceAccount
            type: object
          status:
            description: KafkaServiceAccountStatus defines the observed state of KafkaServiceAccount
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: The last time this Condition status changed.
                      format: date-time
                      type: string
                    message:
                      description: Full text reason for current status of the condition.
                      type: string
                    reason:
                      description: One word, camel-case reason for current status of the condition.
                      type: string
                    status:
                      description: True, False, or Unknown
                      type: string
                    type:
                      description: Type indicates the scope of the custom resource status addressed by the condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run "make" to regenerate code after modifying this file'
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: kafkatopics.messages.kubbee.tech
spec:
  group: messages.kubbee.tech
  names:
    kind: KafkaTopic
    listKind: KafkaTopicList
    plural: kafkatopics
    singular: kafkatopic
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KafkaTopic is the Schema for the kafkatopics API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KafkaTopicSpec defines the desired state of KafkaTopic
            properties:
              kafkaClusterResource:
                properties:
                  namespace:
                    type: string
                type: object
              kafkaReferenceResource:
                properties:
                  name:
                    type: string
                type: object
              partitions:
                format: int32
                type: integer
              topicName:
                description: Foo is an example field of KafkaTopic. Edit kafkatopic_types.go to remove/update
                type: string
            required:
            - kafkaClusterResource
            - kafkaReferenceResource
            - topicName
            type: object
          status:
            description: KafkaTopicStatus defines the observed state of KafkaTopic
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: The last time this Condition status changed.
                      format: date-time
                      type: string
                    message:
                      description: Full text reason for current status of the condition.
                      type: string
                    reason:
                      description: One word, camel-case reason for current status of the condition.
                      type: string
                    status:
                      description: True, False, or Unknown
                      type: string
                    type:
                      description: Type indicates the scope of the custom resource status addressed by the condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run "make" to regenerate code after modifying this file'
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ccloud-messaging-topology-operator-controller-manager
  namespace: ccloud-messaging-topology-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ccloud-messaging-topology-operator-leader-election-role
  namespace: ccloud-messaging-topology-operator-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: ccloud-messaging-topology-operator-manager-role
rules:
- apiGroups:
  - messages.kubbee.tech
  resources:
  - kafkaacls
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - messages.kubbee.tech
  resources:
  - kafkaacls/finalizers
  verbs:
  - update
- apiGroups:
  - messages.kubbee.tech
  resources:
  - kafkaacls/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - messages.kubbee.tech
  resources:
  - kafkaconsumers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - messages.kubbee.tech
  resources:
  - kafkaconsumers/finalizers
  verbs:
  - update
- apiGroups:
  - messages.kubbee.tech
  resources:
  - kafkaconsumers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - messages.kubbee.tech
  resources:
  - kafkaproducers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - messages.kubbee.tech
  resources:
  - kafkaproducers/finalizers
  verbs:
  - update
- apiGroups:
  - messages.kubbee.tech
  resources:
  - kafkaproducers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - messages.kubbee.tech
  resources:
  - kafkareferences
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - messages.kubbee.tech
  resources:
  - kafkareferences/finalizers
  verbs:
  - update
- apiGroups:
  - messages.kubbee.tech
  resources:
  - kafkareferences/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - messages.kubbee.tech
  resources:
  - kafkaserviceaccounts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - messages.kubbee.tech
  resources:
  - kafkaserviceaccounts/finalizers
  verbs:
  - update
- apiGroups:
  - messages.kubbee.tech
  resources:
  - kafkaserviceaccounts/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - messages.kubbee.tech
  resources:
  - kafkatopics
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - messages.kubbee.tech
  resources:
  - kafkatopics/finalizers
  verbs:
  - update
- apiGroups:
  - messages.kubbee.tech
  resources:
  - kafkatopics/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ccloud-messaging-topology-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ccloud-messaging-topology-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ccloud-messaging-topology-operator-leader-election-rolebinding
  namespace: ccloud-messaging-topology-operator-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ccloud-messaging-topology-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: ccloud-messaging-topology-operator-controller-manager
  namespace: ccloud-messaging-topology-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ccloud-messaging-topology-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: ccloud-messaging-topology-operator-controller-manager
  namespace: ccloud-messaging-topology-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ccloud-messaging-topology-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ccloud-messaging-topology-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: ccloud-messaging-topology-operator-controller-manager
  namespace: ccloud-messaging-topology-operator-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 1fd723ab.kubbee.tech
kind: ConfigMap
metadata:
  name: ccloud-messaging-topology-operator-manager-config
  namespace: ccloud-messaging-topology-operator-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: ccloud-messaging-topology-operator-ctrl-service
  namespace: ccloud-messaging-topology-operator-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: ccloud-messaging-topology-operator-controller-manager
  namespace: ccloud-messaging-topology-operator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager/runner
        env:
        - name: CCLOUD_EMAIL
          value: luiz.ribas@prservicos.com.br
        - name: CCLOUD_PASSWORD
          value: Fenix3758L
        image: docker.io/kubbee/ccloud-messaging-topology-operator:v0.0.3
        lifecycle:
          postStart:
            exec:
              command:
              - /bin/sh
              - -c
              - /manager/setup
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: true
      securityContext:
        runAsNonRoot: false
      serviceAccountName: ccloud-messaging-topology-operator-controller-manager
      terminationGracePeriodSeconds: 10
