---
# Source: plataforma-engenharia-add-kafka-rabbit2-ops/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-plataforma-engenharia-add-kafka-rabbit2-ops
  namespace: kafka-demo
  labels:
    helm.sh/chart: plataforma-engenharia-add-kafka-rabbit2-ops-0.1.0
    app.kubernetes.io/name: plataforma-engenharia-add-kafka-rabbit2-ops
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: plataforma-engenharia-add-kafka-rabbit2-ops
    app.kubernetes.io/instance: release-name
---
# Source: plataforma-engenharia-add-kafka-rabbit2-ops/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-plataforma-engenharia-add-kafka-rabbit2-ops
  namespace: kafka-demo
  labels:
    helm.sh/chart: plataforma-engenharia-add-kafka-rabbit2-ops-0.1.0
    app.kubernetes.io/name: plataforma-engenharia-add-kafka-rabbit2-ops
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: plataforma-engenharia-add-kafka-rabbit2-ops
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: plataforma-engenharia-add-kafka-rabbit2-ops
        app.kubernetes.io/instance: release-name
        version: latest
    spec:
#      serviceAccountName: "manager-secret-aws"
      securityContext:
        {}
      containers:
        - name: plataforma-engenharia-add-kafka-rabbit2-ops
          securityContext:
            {}
          image: "docker.io/kubbee/quarkus-kafka-example:v0.0.2"
          imagePullPolicy: IfNotPresent
          env:
          # Env Variable to Release Monitoring by Dynatrace
            - name: DT_RELEASE_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['version']
          envFrom:
          # configuration to enable rabbitmq
          # end
          #configuration to enable topic
            - configMapRef:
                name: kafkatopic-notification
          #
          ports:
            - name: quarkus-http
              containerPort: 8080
              protocol: TCP
          resources:
            {}
---
# Source: plataforma-engenharia-add-kafka-rabbit2-ops/templates/kafka.yaml
apiVersion: messages.kubbee.tech/v1alpha1
kind: KafkaReference
metadata:
  name: kafkareference-notification
spec:
  clusterName: devel
  environment: odin
  tenant: odin
  kafkaClusterResource:
    namespace: ccloud-cluster-operator-system
---
# Source: plataforma-engenharia-add-kafka-rabbit2-ops/templates/kafka.yaml
apiVersion: messages.kubbee.tech/v1alpha1
kind: KafkaTopic
metadata:
  name: kafkatopic-notification
spec:
  topicName: notification
  partitions: 6
  kafkaClusterResource:
    namespace: ccloud-cluster-operator-system
  kafkaReferenceResource:
    name: kafkareference-notification
---
# Source: plataforma-engenharia-add-kafka-rabbit2-ops/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-plataforma-engenharia-add-kafka-rabbit2-ops-test-connection"
  labels:
    helm.sh/chart: plataforma-engenharia-add-kafka-rabbit2-ops-0.1.0
    app.kubernetes.io/name: plataforma-engenharia-add-kafka-rabbit2-ops
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-plataforma-engenharia-add-kafka-rabbit2-ops:']
  restartPolicy: Never
